// <auto-generated />
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Z011.Domain.Entities;

namespace Z011.ConsoleApp.Migrations
{
    [DbContext(typeof(EntityDbContext))]
    [Migration("20210310011443_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Z011.Domain.Entities.StockEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Symbol");

                    b.HasKey("Id");

                    b.HasIndex("Symbol")
                        .IsUnique();

                    b.ToTable("Stocks", "Stocks");
                });

            modelBuilder.Entity("Z011.Domain.Entities.StockPriceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AdjClose")
                        .HasColumnType("REAL")
                        .HasColumnName("AdjClose");

                    b.Property<double>("Close")
                        .HasColumnType("REAL")
                        .HasColumnName("Close");

                    b.Property<byte>("Frequency")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Frequency");

                    b.Property<double>("High")
                        .HasColumnType("REAL")
                        .HasColumnName("High");

                    b.Property<double>("Low")
                        .HasColumnType("REAL")
                        .HasColumnName("Low");

                    b.Property<double>("Open")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Period")
                        .HasColumnType("TEXT")
                        .HasColumnName("Period");

                    b.Property<int>("StockId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("StockId");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL")
                        .HasColumnName("Volume");

                    b.HasKey("Id");

                    b.HasIndex("StockId", "Frequency", "Period")
                        .IsUnique();

                    b.ToTable("StockPrices", "Stocks");
                });

            modelBuilder.Entity("Z011.Domain.Entities.StockPriceEntity", b =>
                {
                    b.HasOne("Z011.Domain.Entities.StockEntity", "Stock")
                        .WithMany("StockPrices")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Z011.Domain.Entities.StockEntity", b =>
                {
                    b.Navigation("StockPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
